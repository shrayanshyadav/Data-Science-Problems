{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Random Forest Company","provenance":[],"collapsed_sections":[],"mount_file_id":"158l7MxSTjXuqZP1P3ApGrzUdGtHw_pQC","authorship_tag":"ABX9TyOrHUIDRHGHyzaP5ZfgO2sU"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"taW09MtRuScT","executionInfo":{"status":"ok","timestamp":1613711894271,"user_tz":-330,"elapsed":1610,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}}},"source":["import pandas as pd\r\n","import numpy as np\r\n"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"AW3mTUERtYIo","executionInfo":{"status":"ok","timestamp":1613711926645,"user_tz":-330,"elapsed":1142,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"c530ad99-5f94-4d31-9e25-20959821d84b"},"source":["Com_df=pd.read_csv('/content/drive/MyDrive/Asignments_DS/Company_Data.csv')\r\n","Com_df"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sales</th>\n","      <th>CompPrice</th>\n","      <th>Income</th>\n","      <th>Advertising</th>\n","      <th>Population</th>\n","      <th>Price</th>\n","      <th>ShelveLoc</th>\n","      <th>Age</th>\n","      <th>Education</th>\n","      <th>Urban</th>\n","      <th>US</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9.50</td>\n","      <td>138</td>\n","      <td>73</td>\n","      <td>11</td>\n","      <td>276</td>\n","      <td>120</td>\n","      <td>Bad</td>\n","      <td>42</td>\n","      <td>17</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11.22</td>\n","      <td>111</td>\n","      <td>48</td>\n","      <td>16</td>\n","      <td>260</td>\n","      <td>83</td>\n","      <td>Good</td>\n","      <td>65</td>\n","      <td>10</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10.06</td>\n","      <td>113</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>269</td>\n","      <td>80</td>\n","      <td>Medium</td>\n","      <td>59</td>\n","      <td>12</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.40</td>\n","      <td>117</td>\n","      <td>100</td>\n","      <td>4</td>\n","      <td>466</td>\n","      <td>97</td>\n","      <td>Medium</td>\n","      <td>55</td>\n","      <td>14</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4.15</td>\n","      <td>141</td>\n","      <td>64</td>\n","      <td>3</td>\n","      <td>340</td>\n","      <td>128</td>\n","      <td>Bad</td>\n","      <td>38</td>\n","      <td>13</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>12.57</td>\n","      <td>138</td>\n","      <td>108</td>\n","      <td>17</td>\n","      <td>203</td>\n","      <td>128</td>\n","      <td>Good</td>\n","      <td>33</td>\n","      <td>14</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>6.14</td>\n","      <td>139</td>\n","      <td>23</td>\n","      <td>3</td>\n","      <td>37</td>\n","      <td>120</td>\n","      <td>Medium</td>\n","      <td>55</td>\n","      <td>11</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>7.41</td>\n","      <td>162</td>\n","      <td>26</td>\n","      <td>12</td>\n","      <td>368</td>\n","      <td>159</td>\n","      <td>Medium</td>\n","      <td>40</td>\n","      <td>18</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>5.94</td>\n","      <td>100</td>\n","      <td>79</td>\n","      <td>7</td>\n","      <td>284</td>\n","      <td>95</td>\n","      <td>Bad</td>\n","      <td>50</td>\n","      <td>12</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>9.71</td>\n","      <td>134</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>120</td>\n","      <td>Good</td>\n","      <td>49</td>\n","      <td>16</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>400 rows Ã— 11 columns</p>\n","</div>"],"text/plain":["     Sales  CompPrice  Income  Advertising  ...  Age  Education Urban   US\n","0     9.50        138      73           11  ...   42         17   Yes  Yes\n","1    11.22        111      48           16  ...   65         10   Yes  Yes\n","2    10.06        113      35           10  ...   59         12   Yes  Yes\n","3     7.40        117     100            4  ...   55         14   Yes  Yes\n","4     4.15        141      64            3  ...   38         13   Yes   No\n","..     ...        ...     ...          ...  ...  ...        ...   ...  ...\n","395  12.57        138     108           17  ...   33         14   Yes  Yes\n","396   6.14        139      23            3  ...   55         11    No  Yes\n","397   7.41        162      26           12  ...   40         18   Yes  Yes\n","398   5.94        100      79            7  ...   50         12   Yes  Yes\n","399   9.71        134      37            0  ...   49         16   Yes  Yes\n","\n","[400 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y-2b_JHCufch","executionInfo":{"status":"ok","timestamp":1613711938230,"user_tz":-330,"elapsed":1121,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"4ceb6d17-ea75-4865-afbf-8fc51b2adbeb"},"source":["Com_df.columns"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Sales', 'CompPrice', 'Income', 'Advertising', 'Population', 'Price',\n","       'ShelveLoc', 'Age', 'Education', 'Urban', 'US'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I1C_F86luhcv","executionInfo":{"status":"ok","timestamp":1613711963657,"user_tz":-330,"elapsed":1035,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"dbaecfc8-a300-4fc0-8d56-a85290ae77f2"},"source":["Com_df.isnull().value_counts()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sales  CompPrice  Income  Advertising  Population  Price  ShelveLoc  Age    Education  Urban  US   \n","False  False      False   False        False       False  False      False  False      False  False    400\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"KEn5H34KuoaG"},"source":["#There are no null values"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sadwWFD2uqpz","executionInfo":{"status":"ok","timestamp":1613711985703,"user_tz":-330,"elapsed":1227,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"ad608a07-de44-4338-9df6-f3b292167ec3"},"source":["Com_df.info()"],"execution_count":7,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 400 entries, 0 to 399\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   Sales        400 non-null    float64\n"," 1   CompPrice    400 non-null    int64  \n"," 2   Income       400 non-null    int64  \n"," 3   Advertising  400 non-null    int64  \n"," 4   Population   400 non-null    int64  \n"," 5   Price        400 non-null    int64  \n"," 6   ShelveLoc    400 non-null    object \n"," 7   Age          400 non-null    int64  \n"," 8   Education    400 non-null    int64  \n"," 9   Urban        400 non-null    object \n"," 10  US           400 non-null    object \n","dtypes: float64(1), int64(7), object(3)\n","memory usage: 34.5+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g1zK5kA5uz_V","executionInfo":{"status":"ok","timestamp":1613712057375,"user_tz":-330,"elapsed":1053,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"7583d2da-80c5-4c51-b7df-07c450355886"},"source":["Com_df.Sales.describe()"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    400.000000\n","mean       7.496325\n","std        2.824115\n","min        0.000000\n","25%        5.390000\n","50%        7.490000\n","75%        9.320000\n","max       16.270000\n","Name: Sales, dtype: float64"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"ghgx6aqDvBNE","executionInfo":{"status":"ok","timestamp":1613712091999,"user_tz":-330,"elapsed":1226,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}}},"source":["#Changing the categorical variables into dummies.\r\n","df1 = pd.get_dummies(Com_df)\r\n","\r\n","#Converting Sales into Categorical dummies\r\n","df1['Category'] = pd.cut(df1['Sales'], \r\n","                        bins=[0,10, np.inf], \r\n","                        labels=['Low/Mid','High'],\r\n","                        include_lowest=True)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":375},"id":"v9lGj43QvHMP","executionInfo":{"status":"ok","timestamp":1613712100622,"user_tz":-330,"elapsed":1234,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"84dc773e-de0c-46ed-cc78-01bd745c8c22"},"source":["df1.head(10)"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sales</th>\n","      <th>CompPrice</th>\n","      <th>Income</th>\n","      <th>Advertising</th>\n","      <th>Population</th>\n","      <th>Price</th>\n","      <th>Age</th>\n","      <th>Education</th>\n","      <th>ShelveLoc_Bad</th>\n","      <th>ShelveLoc_Good</th>\n","      <th>ShelveLoc_Medium</th>\n","      <th>Urban_No</th>\n","      <th>Urban_Yes</th>\n","      <th>US_No</th>\n","      <th>US_Yes</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9.50</td>\n","      <td>138</td>\n","      <td>73</td>\n","      <td>11</td>\n","      <td>276</td>\n","      <td>120</td>\n","      <td>42</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Low/Mid</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11.22</td>\n","      <td>111</td>\n","      <td>48</td>\n","      <td>16</td>\n","      <td>260</td>\n","      <td>83</td>\n","      <td>65</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10.06</td>\n","      <td>113</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>269</td>\n","      <td>80</td>\n","      <td>59</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.40</td>\n","      <td>117</td>\n","      <td>100</td>\n","      <td>4</td>\n","      <td>466</td>\n","      <td>97</td>\n","      <td>55</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Low/Mid</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4.15</td>\n","      <td>141</td>\n","      <td>64</td>\n","      <td>3</td>\n","      <td>340</td>\n","      <td>128</td>\n","      <td>38</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Low/Mid</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>10.81</td>\n","      <td>124</td>\n","      <td>113</td>\n","      <td>13</td>\n","      <td>501</td>\n","      <td>72</td>\n","      <td>78</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6.63</td>\n","      <td>115</td>\n","      <td>105</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>108</td>\n","      <td>71</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Low/Mid</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>11.85</td>\n","      <td>136</td>\n","      <td>81</td>\n","      <td>15</td>\n","      <td>425</td>\n","      <td>120</td>\n","      <td>67</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>6.54</td>\n","      <td>132</td>\n","      <td>110</td>\n","      <td>0</td>\n","      <td>108</td>\n","      <td>124</td>\n","      <td>76</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Low/Mid</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>4.69</td>\n","      <td>132</td>\n","      <td>113</td>\n","      <td>0</td>\n","      <td>131</td>\n","      <td>124</td>\n","      <td>76</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Low/Mid</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sales  CompPrice  Income  Advertising  ...  Urban_Yes  US_No  US_Yes  Category\n","0   9.50        138      73           11  ...          1      0       1   Low/Mid\n","1  11.22        111      48           16  ...          1      0       1      High\n","2  10.06        113      35           10  ...          1      0       1      High\n","3   7.40        117     100            4  ...          1      0       1   Low/Mid\n","4   4.15        141      64            3  ...          1      1       0   Low/Mid\n","5  10.81        124     113           13  ...          0      0       1      High\n","6   6.63        115     105            0  ...          1      1       0   Low/Mid\n","7  11.85        136      81           15  ...          1      0       1      High\n","8   6.54        132     110            0  ...          0      1       0   Low/Mid\n","9   4.69        132     113            0  ...          0      0       1   Low/Mid\n","\n","[10 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"lplGXDzZvNph","executionInfo":{"status":"ok","timestamp":1613712142880,"user_tz":-330,"elapsed":2452,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}}},"source":["from sklearn.model_selection import KFold\r\n","from sklearn.model_selection import cross_val_score\r\n","from sklearn.ensemble import RandomForestClassifier"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"EBm_8-ghvUR0","executionInfo":{"status":"ok","timestamp":1613712284698,"user_tz":-330,"elapsed":1403,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}}},"source":["array = df1.values\r\n","X = array[:,1:15]\r\n","Y = array[:,15]"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iS3a_t_Bv11m","executionInfo":{"status":"ok","timestamp":1613712298994,"user_tz":-330,"elapsed":1656,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"dfd6f286-96bf-44ca-9db8-db19c7941ae6"},"source":["X"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[138, 73, 11, ..., 1, 0, 1],\n","       [111, 48, 16, ..., 1, 0, 1],\n","       [113, 35, 10, ..., 1, 0, 1],\n","       ...,\n","       [162, 26, 12, ..., 1, 0, 1],\n","       [100, 79, 7, ..., 1, 0, 1],\n","       [134, 37, 0, ..., 1, 0, 1]], dtype=object)"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7FO8w7wpv5M_","executionInfo":{"status":"ok","timestamp":1613712304297,"user_tz":-330,"elapsed":750,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"598fe49a-8ff1-4cf7-ff78-d58a09db8fa9"},"source":["Y"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'High',\n","       'High', 'Low/Mid', 'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High',\n","       'Low/Mid', 'High', 'High', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'High', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'High', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'High',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid',\n","       'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'High', 'Low/Mid', 'Low/Mid', 'High', 'High',\n","       'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid', 'Low/Mid', 'High', 'Low/Mid', 'Low/Mid', 'Low/Mid',\n","       'Low/Mid'], dtype=object)"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7KdWp0Mkv751","executionInfo":{"status":"ok","timestamp":1613712333792,"user_tz":-330,"elapsed":3526,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"d6c69b2c-70c2-42e8-f9a5-5323228ee62d"},"source":["num_trees = 100\r\n","max_features = 4\r\n","kfold = KFold(n_splits=10, random_state=7)\r\n","model = RandomForestClassifier(n_estimators=num_trees, max_features=max_features)\r\n","results = cross_val_score(model, X, Y, cv=kfold)\r\n","print(results.mean()*100)"],"execution_count":21,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:296: FutureWarning: Setting a random_state has no effect since shuffle is False. This will raise an error in 0.24. You should leave random_state to its default (None), or set shuffle=True.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"stream","text":["87.5\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"fYp9MHk6wCCd"},"source":["#Lets try to increase CV score with some esembels techniques\r\n","1)Bagging\r\n","2)Boosting"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vMqskt0iwLZC","executionInfo":{"status":"ok","timestamp":1613712404568,"user_tz":-330,"elapsed":4017,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"cbc7798e-8624-4222-e9f1-1e7ca479cd7a"},"source":["from sklearn.ensemble import BaggingClassifier\r\n","from sklearn.tree import DecisionTreeClassifier\r\n","\r\n","seed = 7\r\n","\r\n","cart = DecisionTreeClassifier()\r\n","num_trees = 100\r\n","model1 = BaggingClassifier(base_estimator=cart, n_estimators=num_trees, random_state=seed)\r\n","results1 = cross_val_score(model1, X, Y, cv=kfold)\r\n","print(results1.mean()*100)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["86.49999999999999\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pCxQFcYSwWNO","executionInfo":{"status":"ok","timestamp":1613712423921,"user_tz":-330,"elapsed":3731,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"e3861851-456d-4fb7-abec-c94ebcb8966d"},"source":["# AdaBoost Classification\r\n","from pandas import read_csv\r\n","from sklearn.model_selection import KFold\r\n","from sklearn.model_selection import cross_val_score\r\n","from sklearn.ensemble import AdaBoostClassifier\r\n","\r\n","model2 = AdaBoostClassifier(n_estimators=num_trees, random_state=seed)\r\n","results2 = cross_val_score(model2, X, Y, cv=kfold)\r\n","print(results2.mean()*100)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["89.25\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AOTPKJdXwZSY","executionInfo":{"status":"ok","timestamp":1613712475203,"user_tz":-330,"elapsed":1755,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}}},"source":["# Stacking Ensemble for Classification\r\n","from pandas import read_csv\r\n","from sklearn.model_selection import KFold\r\n","from sklearn.model_selection import cross_val_score\r\n","from sklearn.linear_model import LogisticRegression\r\n","from sklearn.tree import DecisionTreeClassifier\r\n","from sklearn.svm import SVC\r\n","from sklearn.ensemble import VotingClassifier"],"execution_count":25,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Qxw5pARBwjYp"},"source":["Lets try some iteration to see if we can increase the CV scores"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kVMaSZIWwpWR","executionInfo":{"status":"ok","timestamp":1613712524476,"user_tz":-330,"elapsed":8637,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"8b288c51-cedd-4a93-ff7c-3a5474031dca"},"source":["#Iteration 1\r\n","\r\n","# create the sub models\r\n","estimators = []\r\n","model3 = LogisticRegression(max_iter=500)\r\n","estimators.append(('logistic', model3))\r\n","model4 = DecisionTreeClassifier()\r\n","estimators.append(('cart', model4))\r\n","model5 = SVC()\r\n","estimators.append(('svm', model5))\r\n","model6 = BaggingClassifier(base_estimator=cart, n_estimators=num_trees, random_state=seed)\r\n","estimators.append(('bagging', model6))\r\n","model7 = AdaBoostClassifier(n_estimators=num_trees, random_state=seed)\r\n","estimators.append(('boosting', model7))\r\n","\r\n","# create the ensemble modelIter\r\n","ensemble = VotingClassifier(estimators)\r\n","results3 = cross_val_score(ensemble, X, Y, cv=kfold)\r\n","print(results3.mean()*100)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"],"name":"stderr"},{"output_type":"stream","text":["90.5\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"gsJlNeXHw3sB"},"source":["The estimators are  giving 90.5 percent CV score"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v9oUCSEIxM-2","executionInfo":{"status":"ok","timestamp":1613712660308,"user_tz":-330,"elapsed":5041,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"104c8b58-c978-44f1-d8aa-920a8d2f8020"},"source":["#Iteration 2\r\n","# create the sub models\r\n","estimators = []\r\n","model12 = LogisticRegression(max_iter=500)\r\n","estimators.append(('logistic', model12))\r\n","model13 = DecisionTreeClassifier()\r\n","estimators.append(('cart', model13))\r\n","model14 = AdaBoostClassifier(n_estimators=num_trees, random_state=seed)\r\n","estimators.append(('boosting', model14))\r\n","\r\n","# create the ensemble modSel\r\n","ensemble = VotingClassifier(estimators)\r\n","results5 = cross_val_score(ensemble, X, Y, cv=kfold)\r\n","print(results5.mean()*100)"],"execution_count":28,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"],"name":"stderr"},{"output_type":"stream","text":["91.25\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1OgadMimxV3U"},"source":["The iteration 2 is giving 91.25 CV score"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"duosnvibwxxf","executionInfo":{"status":"ok","timestamp":1613712597807,"user_tz":-330,"elapsed":6855,"user":{"displayName":"shrayansh yadav","photoUrl":"","userId":"07415612741849268956"}},"outputId":"2b85b047-43e7-425a-e38f-03a7f707e039"},"source":["#Iteration 3\r\n","# create the sub models\r\n","estimators = []\r\n","model8 = LogisticRegression(max_iter=500)\r\n","estimators.append(('logistic', model8))\r\n","model9 = DecisionTreeClassifier()\r\n","estimators.append(('cart', model9))\r\n","model10 = BaggingClassifier(base_estimator=cart, n_estimators=num_trees, random_state=seed)\r\n","estimators.append(('bagging', model10))\r\n","model11 = AdaBoostClassifier(n_estimators=num_trees, random_state=seed)\r\n","estimators.append(('boosting', model11))\r\n","\r\n","# create the ensemble model\r\n","ensemble = VotingClassifier(estimators)\r\n","results4 = cross_val_score(ensemble, X, Y, cv=kfold)\r\n","print(results4.mean()*100)"],"execution_count":27,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n","/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"],"name":"stderr"},{"output_type":"stream","text":["89.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"dVxbUL4cxDXd"},"source":["The CV score are giving 89.0 accuracy"]},{"cell_type":"markdown","metadata":{"id":"HfOhJE8FxHZz"},"source":["#The CV score is getting decreased , hence forth we will take iteration 2  as the valid estimators and final model"]},{"cell_type":"code","metadata":{"id":"ThAM9DhIxiaD"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IXFmxFfYxBrf"},"source":[""]}]}